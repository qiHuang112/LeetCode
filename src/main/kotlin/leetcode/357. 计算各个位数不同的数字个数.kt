package leetcode

/**
给定一个非负整数 n，计算各位数字都不同的数字 x 的个数，其中 0 ≤ x < 10n 。

示例:

输入: 2
输出: 91
解释: 答案应为除去 11,22,33,44,55,66,77,88,99 外，在 [0,100) 区间内的所有数字。
 */

/**
 * [0, 10) -> 10
 * [10, 100) -> 9 * 9
 * [100, 1000) -> 9 * 9 * 8
 * [1000, 10000) -> 9 * 9 * 8 * 7
 * [10000, 100000) -> 9 * 9 * 8 * 7 * 6
 * [100000, 1000000) -> 9 * 9 * 8 * 7 * 6 * 5
 * [1000000, 10000000) -> 9 * 9 * 8 * 7 * 6 * 5 * 4
 * [10000000, 100000000) -> 9 * 9 * 8 * 7 * 6 * 5 * 4 * 3
 * [100000000, 1000000000) -> 9 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2
 * [1000000000, 10000000000) -> 9 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1
 * [10000000000, 100000000000) -> 0
 */
private fun countNumbersWithUniqueDigits(n: Int): Int {
    if (n == 0) return 1
    fun count(n: Int) = when (n) {
        1 -> 10
        in 2..10 -> (1 until n).fold(9) { acc: Int, i: Int -> acc * (10 - i) }
        else -> 0
    }
    return (1..n).fold(0) { acc, i -> acc + count(i) }
}

fun main() {
    for (i in 1..10) {
        println(countNumbersWithUniqueDigits(i))
    }
}