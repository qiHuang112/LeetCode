package leetcode

import kotlin.math.log

/*
 f(x) 是 x! 末尾是0的数量。（回想一下 x! = 1 * 2 * 3 * ... * x，且0! = 1）

例如， f(3) = 0 ，因为3! = 6的末尾没有0；而 f(11) = 2 ，因为11!= 39916800末端有2个0。给定 K，找出多少个非负整数x ，有 f(x) = K 的性质。

示例 1:
输入:K = 0
输出:5
解释: 0!, 1!, 2!, 3!, and 4! 均符合 K = 0 的条件。

示例 2:
输入:K = 5
输出:0
解释:没有匹配到这样的 x!，符合K = 5 的条件。

注意：
K是范围在 [0, 10^9] 的整数。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/preimage-size-of-factorial-zeroes-function
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
/**
 * 超时，主要是在i--那儿出了问题，尝试用二分法优化
 */
private fun preimageSizeFZF1(K: Int): Int {
    var i = K
    while (count(i) > K - i) {
        i--
    }
    if (i + count(i) != K) {
        return 0
    }
    return 5
}

private fun preimageSizeFZF(K: Int): Int {
    val i = findIndex(K, 0, K)
    if (i + count(i) != K) {
        return 0
    }
    return 5
}

/**
 * 根据公式 i + count(i) = K
 * 找到一个恰好i + count(i) <= K 的 i
 */
private fun findIndex(K: Int, left: Int, right: Int): Int {
    if (left + count(left) > K) return left - 1
    if (right + count(right) < K) return right
    val mid = (left + right).ushr(1)
    val value = mid + count(mid)
    return when {
        value > K -> findIndex(K, left, mid - 1)
        value < K -> findIndex(K, mid + 1, right)
        else -> mid
    }
}

private fun count(num: Int): Int {
    var res = 0
    var temp = num
    while (temp != 0) {
        res += temp / 5
        temp /= 5
    }
    return res
}

fun main() {
    for (i in 0..100) {
        preimageSizeFZF(i)
    }
    println(preimageSizeFZF(11))
    println(preimageSizeFZF(1000000000))
}

private fun findLaw() {
    for (i in 1..100) {
        println(i + count(i))
    }
}
/*
S(n) = n + count(n) = k
已知 S(n) 求n
K每隔5个数加(1,2,3,4,5....)加的这个数取决于当前这行的第一个数能被5整除几次

0: 0, 1, 2, 3, 4,
1: 5, 6, 7, 8, 9,
2: 10, 11, 12, 13, 14,
3: 15, 16, 17, 18, 19,
4: 20, 21, 22, 23, 24,
6: 25, 26, 27, 28, 29,
7: 30, 31, 32, 33, 34,
8: 35, 36, 37, 38, 39,
9: 40, 41, 42, 43, 44,
10: 45, 46, 47, 48, 49,
12: 50, 51, 52, 53, 54,
13: 55, 56, 57, 58, 59,
14: 60, 61, 62, 63, 64,
15: 65, 66, 67, 68, 69,
16: 70, 71, 72, 73, 74,
18: 75, 76, 77, 78, 79,
19: 80, 81, 82, 83, 84,
20: 85, 86, 87, 88, 89,
21: 90, 91, 92, 93, 94,
22: 95, 96, 97, 98, 99,
24: 100, 101, 102, 103, 104,
25: 105, 106, 107, 108, 109,
26: 110, 111, 112, 113, 114,
27: 115, 116, 117, 118, 119,
28: 120, 121, 122, 123, 124,
31: 125, 126, 127, 128, 129,
32: 130, 131, 132, 133, 134,
33: 135, 136, 137, 138, 139,
34: 140, 141, 142, 143, 144,
35: 145, 146, 147, 148, 149,
37: 150, 151, 152, 153, 154,
38: 155, 156, 157, 158, 159,
39: 160, 161, 162, 163, 164,
40: 165, 166, 167, 168, 169,
41: 170, 171, 172, 173, 174,
43: 175, 176, 177, 178, 179,
44: 180, 181, 182, 183, 184,
45: 185, 186, 187, 188, 189,
46: 190, 191, 192, 193, 194,
47: 195, 196, 197, 198, 199,
49: 200, 201, 202, 203, 204,
50: 205, 206, 207, 208, 209,
51: 210, 211, 212, 213, 214,
52: 215, 216, 217, 218, 219,
53: 220, 221, 222, 223, 224,
55: 225, 226, 227, 228, 229,
56: 230, 231, 232, 233, 234,
57: 235, 236, 237, 238, 239,
58: 240, 241, 242, 243, 244,
59: 245, 246, 247, 248, 249,
62: 250, 251, 252, 253, 254,
63: 255, 256, 257, 258, 259,
64: 260, 261, 262, 263, 264,
65: 265, 266, 267, 268, 269,
66: 270, 271, 272, 273, 274,
68: 275, 276, 277, 278, 279,
69: 280, 281, 282, 283, 284,
70: 285, 286, 287, 288, 289,
71: 290, 291, 292, 293, 294,
72: 295, 296, 297, 298, 299,
74: 300, 301, 302, 303, 304,
75: 305, 306, 307, 308, 309,
76: 310, 311, 312, 313, 314,
77: 315, 316, 317, 318, 319,
78: 320, 321, 322, 323, 324,
80: 325, 326, 327, 328, 329,
81: 330, 331, 332, 333, 334,
82: 335, 336, 337, 338, 339,
83: 340, 341, 342, 343, 344,
84: 345, 346, 347, 348, 349,
86: 350, 351, 352, 353, 354,
87: 355, 356, 357, 358, 359,
88: 360, 361, 362, 363, 364,
89: 365, 366, 367, 368, 369,
90: 370, 371, 372, 373, 374,
93: 375, 376, 377, 378, 379,
94: 380, 381, 382, 383, 384,
95: 385, 386, 387, 388, 389,
96: 390, 391, 392, 393, 394,
97: 395, 396, 397, 398, 399,
99: 400, 401, 402, 403, 404,
100: 405, 406, 407, 408, 409,
101: 410, 411, 412, 413, 414,
102: 415, 416, 417, 418, 419,
103: 420, 421, 422, 423, 424,
105: 425, 426, 427, 428, 429,
106: 430, 431, 432, 433, 434,
107: 435, 436, 437, 438, 439,
108: 440, 441, 442, 443, 444,
109: 445, 446, 447, 448, 449,
111: 450, 451, 452, 453, 454,
112: 455, 456, 457, 458, 459,
113: 460, 461, 462, 463, 464,
114: 465, 466, 467, 468, 469,
115: 470, 471, 472, 473, 474,
117: 475, 476, 477, 478, 479,
118: 480, 481, 482, 483, 484,
119: 485, 486, 487, 488, 489,
120: 490, 491, 492, 493, 494,
121: 495, 496, 497, 498, 499,
124: 500, 501, 502, 503, 504,
125: 505, 506, 507, 508, 509,
126: 510, 511, 512, 513, 514,
127: 515, 516, 517, 518, 519,
128: 520, 521, 522, 523, 524,
130: 525, 526, 527, 528, 529,
131: 530, 531, 532, 533, 534,
132: 535, 536, 537, 538, 539,
133: 540, 541, 542, 543, 544,
134: 545, 546, 547, 548, 549,
136: 550, 551, 552, 553, 554,
137: 555, 556, 557, 558, 559,
138: 560, 561, 562, 563, 564,
139: 565, 566, 567, 568, 569,
140: 570, 571, 572, 573, 574,
142: 575, 576, 577, 578, 579,
143: 580, 581, 582, 583, 584,
144: 585, 586, 587, 588, 589,
145: 590, 591, 592, 593, 594,
146: 595, 596, 597, 598, 599,
148: 600, 601, 602, 603, 604,
149: 605, 606, 607, 608, 609,
150: 610, 611, 612, 613, 614,
151: 615, 616, 617, 618, 619,
152: 620, 621, 622, 623, 624,
156: 625, 626, 627, 628, 629,
157: 630, 631, 632, 633, 634,
158: 635, 636, 637, 638, 639,
159: 640, 641, 642, 643, 644,
160: 645, 646, 647, 648, 649,
162: 650, 651, 652, 653, 654,
163: 655, 656, 657, 658, 659,
164: 660, 661, 662, 663, 664,
165: 665, 666, 667, 668, 669,
166: 670, 671, 672, 673, 674,
168: 675, 676, 677, 678, 679,
169: 680, 681, 682, 683, 684,
170: 685, 686, 687, 688, 689,
171: 690, 691, 692, 693, 694,
172: 695, 696, 697, 698, 699,
174: 700, 701, 702, 703, 704,
175: 705, 706, 707, 708, 709,
176: 710, 711, 712, 713, 714,
177: 715, 716, 717, 718, 719,
178: 720, 721, 722, 723, 724,
180: 725, 726, 727, 728, 729,
181: 730, 731, 732, 733, 734,
182: 735, 736, 737, 738, 739,
183: 740, 741, 742, 743, 744,
184: 745, 746, 747, 748, 749,
187: 750, 751, 752, 753, 754,
188: 755, 756, 757, 758, 759,
189: 760, 761, 762, 763, 764,
190: 765, 766, 767, 768, 769,
191: 770, 771, 772, 773, 774,
193: 775, 776, 777, 778, 779,
194: 780, 781, 782, 783, 784,
195: 785, 786, 787, 788, 789,
196: 790, 791, 792, 793, 794,
197: 795, 796, 797, 798, 799,
199: 800, 801, 802, 803, 804,
200: 805, 806, 807, 808, 809,
201: 810, 811, 812, 813, 814,
202: 815, 816, 817, 818, 819,
203: 820, 821, 822, 823, 824,
205: 825, 826, 827, 828, 829,
206: 830, 831, 832, 833, 834,
207: 835, 836, 837, 838, 839,
208: 840, 841, 842, 843, 844,
209: 845, 846, 847, 848, 849,
211: 850, 851, 852, 853, 854,
212: 855, 856, 857, 858, 859,
213: 860, 861, 862, 863, 864,
214: 865, 866, 867, 868, 869,
215: 870, 871, 872, 873, 874,
218: 875, 876, 877, 878, 879,
219: 880, 881, 882, 883, 884,
220: 885, 886, 887, 888, 889,
221: 890, 891, 892, 893, 894,
222: 895, 896, 897, 898, 899,
224: 900, 901, 902, 903, 904,
225: 905, 906, 907, 908, 909,
226: 910, 911, 912, 913, 914,
227: 915, 916, 917, 918, 919,
228: 920, 921, 922, 923, 924,
230: 925, 926, 927, 928, 929,
231: 930, 931, 932, 933, 934,
232: 935, 936, 937, 938, 939,
233: 940, 941, 942, 943, 944,
234: 945, 946, 947, 948, 949,
236: 950, 951, 952, 953, 954,
237: 955, 956, 957, 958, 959,
238: 960, 961, 962, 963, 964,
239: 965, 966, 967, 968, 969,
240: 970, 971, 972, 973, 974,
242: 975, 976, 977, 978, 979,
243: 980, 981, 982, 983, 984,
244: 985, 986, 987, 988, 989,
245: 990, 991, 992, 993, 994,
246: 995, 996, 997, 998, 999,
249: 1000,
Process finished with exit code 0

 */